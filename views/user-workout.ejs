<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Dashboard</title>
    <link rel="shortcut icon" href="images/logo.ico" type="image/x-icon" />
    <link rel="stylesheet" href="css/user-workout.css">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Montserrat:ital,wght@0,100..900;1,100..900&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
</head>
<body>
    <!-- Header Section -->
    <div class="custom-header">
        <div class="logo">
            <img src="/images/logo.png" alt="Logo">
        </div>
        <div class="welcome-text">
            <h1>Welcome Back, <%= user.username %>!</h1> 
        </div>
        <div class="profile-icon">
            <i class="fa-solid fa-circle-user"></i>
        </div>
    </div>

    <!-- Navigation Bar -->
    <div class="navbar">
        <nav>
            <ul>
                <li><a href="/user-dashboard">DASHBOARD</a></li>
                <li><a href="/user-workout" class="active">WORKOUT</a></li>
                <li><a href="/user-profile">PROFILE</a></li>
            </ul>
        </nav>
    </div>

    <!-- Content Section -->
    <div class="content-container">
        <div class="overview-card">
            <h2>WORKOUT</h2>
            <div id="workout-list" class="workout-list"></div>
            <div class="user-workouts">
                <h2>YOUR WORKOUT</h2>
                <div id="workoutSummaryContainer"></div>
            </div>
        </div>
    </div>
    
    <div class="completed-workouts">
        <h2>COMPLETED WORKOUT</h2>
        <div id="completedWorkoutContainer"></div>
    </div>

    <!-- Modal Structure -->
    <div id="workout-modal" class="modal">
        <div class="modal-content">
            <span id="close-modal" class="close">&times;</span>
            <h2>Workout</h2>
            <div class="modal-section">
                <form id="add-workout-form">
                    <input type="hidden" id="workout-id" name="workout-id">
                    <img id="workout-image" class="modal-workout-image" alt="Workout Image">
                    <div class="modal-text">
                        <label for="workout-name">Workout Name</label>
                        <input type="text" id="workout-name" name="workout-name" readonly>

                        <label for="workout-description">Description</label>
                        <textarea id="workout-description" name="workout-description" readonly></textarea>

                        <label for="workout-intensity">Intensity</label>
                        <input type="text" id="workout-intensity" name="workout-intensity" readonly>

                        <label for="workout-duration">Duration (in minutes)</label>
                        <input type="number" id="workout-duration" name="workout-duration" min="1" required>
                        <button type="submit">Add Workout</button>
                    </div>
                </form>
            </div>
        </div>
    </div>

    <script>
        // Modal control logic
        document.getElementById('close-modal').addEventListener('click', closeModal);
        document.getElementById('add-workout-form').addEventListener('submit', addWorkout);

        // Fetch workouts from the backend and display them
        async function fetchWorkouts() {
            try {
                const response = await fetch('/workouts');
                const workouts = await response.json();
                const workoutList = document.getElementById('workout-list');

                workoutList.innerHTML = ''; // Clear previous content

                workouts.forEach(workout => {
                    const workoutDiv = document.createElement('div');
                    workoutDiv.className = 'workout-item';

                    workoutDiv.innerHTML = `
                        <button class="add-workout-btn" 
                            data-id="${workout._id}" 
                            data-image="${workout.image}" 
                            data-name="${workout.name}" 
                            data-description="${workout.description}" 
                            data-intensity="${workout.intensity}">
                            <i class="fas fa-plus"></i>
                        </button>
                        <img src="${workout.image}" alt="${workout.name}" class="workout-image">
                        <div class="workout-text">
                            <h3>${workout.name}</h3>
                            <p>${workout.description}</p>
                            <p><strong>Intensity:</strong> ${workout.intensity}</p>
                        </div>
                    `;

                    // Attach event listener to the Add Workout button
                    workoutDiv.querySelector('.add-workout-btn').addEventListener('click', openModal);
                    workoutList.appendChild(workoutDiv);
                });
            } catch (error) {
                console.error('Error fetching workouts:', error.message);
                document.getElementById('workout-list').innerHTML =
                    '<p>Error loading workouts. Please try again later.</p>';
            }
        }

        // Open modal and populate with selected workout data
        function openModal(event) {
            const button = event.currentTarget;

            // Fill modal fields with workout data
            document.getElementById('workout-id').value = button.getAttribute('data-id');
            document.getElementById('workout-image').src = button.getAttribute('data-image');
            document.getElementById('workout-name').value = button.getAttribute('data-name');
            document.getElementById('workout-description').value = button.getAttribute('data-description');
            document.getElementById('workout-intensity').value = button.getAttribute('data-intensity');

            document.getElementById('workout-duration').value = ''; // Reset duration field

            // Display the modal
            document.getElementById('workout-modal').style.display = 'block';
        }

        // Add workout via form submission
        async function addWorkout(event) {
            event.preventDefault();

            const durationValue = document.getElementById('workout-duration').value;
            
            // Validate duration
            if (!durationValue || isNaN(durationValue) || durationValue <= 0) {
                console.error('Duration is required and must be a positive number.');
                alert('Please enter a valid duration.');
                return; // Exit the function if duration is not valid
            }

            const workoutData = {
                workoutId: document.getElementById('workout-id').value,
                name: document.getElementById('workout-name').value,
                description: document.getElementById('workout-description').value,
                intensity: document.getElementById('workout-intensity').value,
                duration: parseInt(durationValue, 10), // Ensure duration is an integer
                image: document.getElementById('workout-image').src
            };

            console.log('Submitting workout data:', workoutData); // Debug log

            try {
                const response = await fetch('/add-users-workout', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify(workoutData)
                });

                if (response.ok) {
                    alert('Workout added successfully!');
                    closeModal();
                    fetchWorkouts(); // Refresh workout list
                    fetchUserWorkouts(); // Refresh user workouts
                } else {
                    const errorResponse = await response.json();
                    console.error('Error details:', errorResponse);
                    alert(`Failed to add workout: ${errorResponse.message}`);
                }
            } catch (error) {
                console.error('Error adding workout:', error);
            }
        }

        // Close the modal
        function closeModal() {
            document.getElementById('workout-modal').style.display = 'none';
        }

        // Fetch and display user workouts
        async function fetchUserWorkouts() {
            try {
                const response = await fetch('/workouts-user'); // Ensure this endpoint is correct
                if (!response.ok) {
                    throw new Error('Failed to fetch user workouts.');
                }

                const userWorkouts = await response.json();
                console.log('Fetched user workouts:', userWorkouts); // Debugging

                const summaryContainer = document.getElementById('workoutSummaryContainer');
                summaryContainer.innerHTML = ''; // Clear previous content

                if (userWorkouts.length === 0) {
                    summaryContainer.innerHTML = '<p>No workouts found.</p>'; // Display message if empty
                    return;
                }

                userWorkouts.forEach(workout => {
                    const workoutDiv = document.createElement('div');
                    workoutDiv.className = 'user-workout-item';
                    workoutDiv.innerHTML = `
                        <img src="${workout.image}" alt="${workout.name}" class="user-workout-image" style="width: 100px; height: 100px;">
                        <h3>${workout.name}</h3>
                        <p>${workout.description}</p>
                        <p>Duration: ${workout.duration} minutes</p>
                        <button class="done-workout-btn" data-id="${workout._id}">
                            Done
                        </button>
                    `;

                    // Attach event listener to the Done button
                    workoutDiv.querySelector('.done-workout-btn').addEventListener('click', markAsDone);
                    summaryContainer.appendChild(workoutDiv);
                });
            } catch (error) {
                console.error('Error fetching user workouts:', error.message);
            }
        }

        // Mark workout as done
        async function markAsDone(event) {
            const workoutId = event.currentTarget.getAttribute('data-id');

            try {
                const response = await fetch('/complete-workout', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({ workoutId }),
                });

                if (response.ok) {
                    alert('Workout marked as done successfully!');
                    fetchUserWorkouts(); // Refresh user workouts
                } else {
                    const errorResponse = await response.json();
                    console.error('Failed to mark workout:', errorResponse);
                }
            } catch (error) {
                console.error('Error during fetch:', error);
            }
        }
        // Fetch and display completed workouts with date
        async function fetchCompletedWorkouts() {
            try {
                const response = await fetch('/completed-workouts');
                if (!response.ok) {
                    throw new Error('Failed to fetch completed workouts.');
                }

                const completedWorkouts = await response.json();
                const completedContainer = document.getElementById('completedWorkoutContainer');
                completedContainer.innerHTML = ''; // Clear previous content

                if (completedWorkouts.length === 0) {
                    completedContainer.innerHTML = '<p>No completed workouts found.</p>'; // Display message if empty
                    return;
                }

                completedWorkouts.forEach(workout => {
                    const workoutDate = new Date(workout.completedAt); // Assuming `completedAt` is the date field
                    const options = { year: 'numeric', month: 'long', day: 'numeric' };
                    const formattedDate = workoutDate.toLocaleDateString(undefined, options);

                    const workoutDiv = document.createElement('div');
                    workoutDiv.className = 'completed-workout-item';
                    workoutDiv.innerHTML = `
                        <h3>${workout.name}</h3>
                        <p>${workout.description}</p>
                        <span>Completed on: ${formattedDate}</span>
                    `;

                    completedContainer.appendChild(workoutDiv);
                });
            } catch (error) {
                console.error('Error fetching completed workouts:', error.message);
            }
        }
        // Fetch completed workouts on page load
        document.addEventListener('DOMContentLoaded', fetchCompletedWorkouts);
        // Initialize
        fetchWorkouts(); // Fetch workouts when the page loads
        fetchUserWorkouts(); // Fetch user workouts when the page loads
    </script>
</body>
</html>
